{"version":3,"sources":["src/models/User.ts","src/index.ts"],"names":[],"mappings":";;;;;;ACAA,ADGA,ICHA,ADGA,IAAA,ECHA,GAAA,OAAA,CAAA,eAAA,CAAA;ADGA;ACDA,ADCA,ICDM,IAAI,GAAG,CDCb,GCDiB,MAAA,CAAA,IAAJ,CAAS,EAAT,CAAb;AAEA,ADEE,ICFE,CAAC,EAAL,CAAQ,GDEN,IAAA,CCFF,ADEsB,ECFJ,EDEhB,EAAmC,QCFnB;AAChB,ADCoB,ECDpB,OAAO,ADCa,CCDZ,GAAR,ADCoB,CCDR,EDCQ,IAAA,KCDpB;AACD,ADFC,CCAF,QDAE,MAAA,GAAuC,EAAvC;ACGF,ADD0C,ICCtC,CAAC,EAAL,CAAQ,QAAR,EAAkB,YAAA;AAChB,EAAA,OAAO,CAAC,GAAR,CAAY,WAAZ;AACD,ADDC,CCDF,CDCE,IAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,QAAJ,EAAoB;ACEtB,ADDI,ICCA,CAAC,EAAL,CAAQ,GDDG,GCCX,EAAgB,ADDA,IAAL,CAAU,OCCL,CDDL,CAAP;ACEF,ADDC,ECCD,CDHA,MCGO,CAAC,GAAR,CAAY,oBAAZ;AACD,CAFD;AAIA,ADFE,EAAA,ECEE,CAAC,CDFH,CAAA,KCEF,CAAa,GDFX,CAAA,GAAA,CCEF,EDFE,UAAI,IAAJ,EAAmB;ACGrB,ADFI,ICEA,ADFA,CCEC,KDFK,CAAC,CCEX,CAAa,IDFT,CAAc,CCElB,IDFuB,IAAnB,EAAyB,IAAzB;AACD,GAFD;;AAIA,EAAA,IAAA,CAAA,SAAA,CAAA,EAAA,GAAA,UAAG,SAAH,EAAsB,QAAtB,EAAuC;AACrC,QAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,KAA0B,EAA3C;AACA,IAAA,QAAQ,CAAC,IAAT,CAAc,QAAd;AACA,SAAK,MAAL,CAAY,SAAZ,IAAyB,QAAzB;AACD,GAJD;;AAMA,EAAA,IAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,SAAR,EAAyB;AACvB,QAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,CAAjB;;AAEA,QAAI,CAAC,QAAD,IAAa,QAAQ,CAAC,MAAT,KAAoB,CAArC,EAAwC;AACtC;AACD;;AAED,IAAA,QAAQ,CAAC,OAAT,CAAiB,UAAA,OAAA,EAAO;AAAI,aAAA,OAAO,EAAP;AAAS,KAArC;AACD,GARD;;AASF,SAAA,IAAA;AA5BA,CAAA,EAAA;;AAAa,OAAA,CAAA,IAAA,GAAA,IAAA","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["import { UserProps } from '../interfaces/UserProps';\nimport { Calback } from '../types/UserType';\n\nexport class User {\n  events: { [key: string]: Calback[] } = {};\n\n  constructor(private data: UserProps) { }\n\n  get(propName: string): UserProps {\n    return this.data[propName];\n  }\n\n  set(user: UserProps): void {\n    Object.assign(this.data, user);\n  }\n\n  on(eventName: string, callback: Calback): void {\n    const handlers = this.events[eventName] || [];\n    handlers.push(callback);\n    this.events[eventName] = handlers;\n  }\n\n  trigger(eventName: string): void {\n    const handlers = this.events[eventName];\n\n    if (!handlers || handlers.length === 0) {\n      return;\n    }\n\n    handlers.forEach(calback => calback());\n  }\n}","import { User } from './models/User';\n\nconst user = new User({});\n\nuser.on('change', () => {\n  console.log('#change 1');\n});\nuser.on('change', () => {\n  console.log('#cgange 2');\n});\nuser.on('save', () => {\n  console.log('Save was triggered');\n});\n\nuser.trigger('change');\nuser.trigger('save');\n"]}